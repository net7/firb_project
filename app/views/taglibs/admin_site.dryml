<!-- Tag definitions for the Admin subsite -->
 
<include src="rapid" plugin="hobo"/>

<include src="taglibs/auto/admin/rapid/cards"/>
<include src="taglibs/auto/admin/rapid/pages"/>
<include src="taglibs/auto/admin/rapid/forms"/>

<set-theme name="clean"/>

<def tag="app-name">Talia Admin Panel</def>

<def tag="card" for="FirbTextPage">
    <card class="firb-text-page" param="default" merge>
        
        <% 
            if !this.image_zone.nil?
                parent = this.image_zone.get_firb_image_parent
                parent_name = parent.name
                image_zone = this.image_zone
                image_zone_name = image_zone.name
            else
                image_zone = nil
                parent_name = "No image associated"
                image_zone_name = "No zone associated"
            end
        %>
        
        <h4 param="heading"> <%= "#{parent_name} : #{image_zone_name}" %> </h4>

        <div class="firb-image-picture" id="firb_image_container_#{this.id}">
        
        <unless test="&image_zone.nil?">
            <imt-viewer id="firb_image_#{this.id}" b64="#{thumb_xml(parent, [image_zone.uri.to_s])}"/>
        </unless>
        <if test="&image_zone.nil?">
            <img-not-ready />
        </if>

        <span><%= link_to "<img src='/images/icons/text_signature.png'> #{I18n.t('firb_text_page.edit')}", {:action => "edit",  :controller => :firb_text_pages, :id => this.id}, :class => "link-edit", :title => I18n.t("firb_text_page.edit") %></span>

        <span><%= link_to "<img src='/images/icons/cross.png'> #{I18n.t('firb_text_page.remove')}", {:action => "remove_page", :controller => :firb_text_pages, :id => this.id}, :class=> "link-del", :title => I18n.t("firb_text_page.remove") %></span>

        </div>
        <div class="firb-image-zones">
            <div class='firb-text-page-anastatica'>
                <if test="&this.has_anastatica_page?">
                    <h5><%= I18n.t("firb.anastatica") %>:</h5>
                    <span><%= anastatica_pretty_title(this.anastatica) %></span>
                </if>
                <unless test="&this.has_anastatica_page?">
                    <h5><%= I18n.t("firb_text_page.no_anastatica_associated") %></h5>
                </unless>

            </div>

            <div class='firb-text-page-parafrasi'>
                <h5><%= I18n.t("firb.parafrasi") %>:</h5>
                <span><%= this.parafrasi %></span>
            </div>

            <div class='firb-text-page-notes-container'>

                <if test="&this.has_notes?">
                    <h5><%= this.notes_count %> <%= I18n.t("firb.notes") %> : </h5>
                    <repeat with="&this.notes">
                        <div class='firb-text-page-note'> <%= "#{this.uri} #{this.content}" %> </div>
                    </repeat>
                </if>
                <unless test="&this.has_notes?">
                    <h5><%= I18n.t("firb_text_page.no_notes_associated") %></h5>
                </unless>
            </div>
            
        </div>

    </card>
</def>

<def tag="card-with-drag-handle">
	<% drag_id = this.to_uri.safe_encoded %>
	<div id="#{drag_id}">
		<card>
			<before-heading:>
				<if test="&this.with_acting_user(current_user) { this.update_permitted? }"><div class="drag_handle">&nbsp;</div></if>
			</before-heading:>
		</card>
	</div>
	<if test="&this.with_acting_user(current_user) { this.update_permitted? }">
	<%= draggable_element(drag_id, 
	    :handle => "'drag_handle'", 
	    :revert => true, 
	    :ghosting => true,
	    :scroll => 'window' ) %>
	</if>
</def>

<def tag="collection-sidebar">
	<h2>Collections</h2>
	<collection>
		<item:>
			<div id="#{this.to_uri.safe_encoded}">
				<card/>
			</div>
		</item:>
		<after-item:>
			<if test="&this.with_acting_user(current_user) { this.update_permitted? }">
				<%= drop_receiving_element(this.to_uri.safe_encoded,
				:url => { :controller => 'admin/talia_sources', :action => 'assign_collection' },
				:with => "'source=' + encodeURIComponent(element.id) + '&collection=#{this.to_uri.safe_encoded}'",
				:hoverclass => 'drop_ready'
				) %>
			</if>
		</after-item:>
		<empty-message:>No collections found</empty-message>
	</collection>
</def>


<def tag="card" for="FirbImage">
  <card class="firb-image" param="default" merge>
    <h4 param="heading"><editor:name /> <span><link-del-image /><link-add-to-image /></span></h4> 

    <% @imageid = this.id %>
    <div class="firb-image-picture" id="firb_image_container_#{this.id}">

        <if test="&this.file_status == 'OK'">
        <imt-viewer id="firb_image_#{@imageid}" b64="#{thumb_xml(this)}"/>
        </if>
        <unless test="&this.file_status == 'OK'">
            <img-not-ready />
        </unless>
        <span><link-imt-edit /></span>

    </div>

    <div class="firb-image-zones">
        <h4><%= this.zone_count %> <ht key='firb_image.zones'>zones</ht>:</h4> 
        <ul>
            <li repeat="&this.zones">
                <firbimagezone parentfirbimageid="firb_image_#{@imageid}"/>
            </li>
        </ul>
    </div>

  </card>
</def>

<!-- Shows an image zone, if there's children, shows them as well -->
<def tag="firbimagezone" attrs="parentfirbimageid">
    <span onmouseover="getFlashObject('<%= parentfirbimageid %>').setPolygonHighlighted(true, '<%= this.id.to_s %>');"
        onmouseout="getFlashObject('<%= parentfirbimageid %>').setPolygonHighlighted(false, '<%= this.id.to_s %>');" id="firb_image_zone_#{this.id}" class="single-zone"><editor:name /></span>: <link-add-to-zone /> <link-del-zone />
    <% if this.zone_count > 0 %>
        <ul>
            <li repeat="&this.zones"> <firbimagezone parentfirbimageid="#{parentfirbimageid}"/> </li>
        </ul>
    <% end %>
</def>


<!-- 
    IMT Viewer tag, with parameters:
    - id: used for the id tag and for the embed.name attribute
    - b64: base64 of the xml needed to initialize it
 -->
<def tag="imt-viewer" attrs="id, b64">
    <div class="imt-viewer">
        <object class="IMTViewer" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="#{id}" width="200" height="200" codebase="http://fpdownload.macromedia.com/get/flashplayer/current/swflash.cab">
            <param name="movie" value="/ImageMapperViewer.swf?js_prefix=jsapi_" />
            <param name="quality" value="high" />
            <param name="bgcolor" value="#ffffff" />
            <param name="allowScriptAccess" value="always" />
            <embed src="/ImageMapperViewer.swf?js_prefix=jsapi_" quality="high" bgcolor="#ffffff" width="100%" height="100%" name="#{id}" align="middle" play="true" loop="false" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.adobe.com/go/getflashplayer" b64="#{b64}"></embed>
        </object>
    </div>
</def>

<def tag="img-not-ready">
    <div class="img-not-ready">
        <img src='/images/icons/hourglass.png' /> <ht key='firb_image.image_not_ready'>Image not ready yet</ht>
    </div>
</def>


<def tag="link-imt-edit">
    <%= link_to "<img src='/images/icons/vector_add.png'> #{I18n.t("firb_image.draw_in_editor")}", {:action => :edit, :controller => :firb_images, :id => this.id}, :title => I18n.t("firb_image.draw_in_editor") %>
</def>

<def tag="link-add-to-image">
    <%= link_to "<img src='/images/icons/layout_add.png'>", {:action => "add_zone", :controller => :firb_images, :id => this.id}, :class => "link-add", :title => I18n.t("firb_image.zone_add") %>
</def>
<def tag="link-add-to-zone">
    <%= link_to "<img src='/images/icons/layout_add.png'>", {:action => "add_zone",  :controller => :firb_image_zones, :id => this.id}, :class => "link-add", :title => I18n.t("firb_image.zone_add") %>
</def>
<def tag="link-del-zone">
    <%= link_to "<img src='/images/icons/cross.png'>", {:action => "remove_zone", :controller => :firb_image_zones, :id => this.id}, :class=> "link-del", :title => I18n.t("firb_image.zone_del"), :confirm => I18n.t("firb_image.confirm_zone_del")  %>
</def>
<def tag="link-del-image">
    <%= link_to "<img src='/images/icons/cross.png'>", {:action => "remove_image", :id => this.id}, :class=> "link-del", :title => I18n.t("firb_image.image_del"), :confirm => I18n.t("firb_image.confirm_image_del")  %>
</def>


<def tag="card" for="TaliaCollection">
  <card class="talia-collection" param="default" merge>
    <header: param>
      <h4 param="heading"><a><name/></a></h4>
    </header:>
	<body:>
		Contains <%= this.real_source.elements.size %> Sources
	</body:>
  </card>
</def>

<def tag="card" for="TaliaSource">
  <card class="talia-source" param="default" merge>
    <header: param>
      <h4 param="heading"><a><name/></a></h4>
    </header:>
	<body:>
		<div><%= this.uri %> | <%= this.short_type %></div>
		<div>
			<% source_uri = this.to_uri.safe_encoded %>
			<% can_update = this.with_acting_user(current_user) { this.update_permitted? } %>
			<repeat with="&TaliaCore::Collection.find(:all, :find_through => [N::DCT.hasPart, this.to_uri])" join=", ">
				<%= this.to_uri.local_name %> 
				<if test="&can_update">
				<remote-method-button method="disjoin_collection" label="x" 
					params="&{:collection => this.to_uri.safe_encoded, :source => source_uri }" 
					url="#{url_for(:controller => 'admin/talia_sources', :action => 'remove_collection')}"
					spinner-next-to="#{source_uri}"
					message="Deleting..."
					/>
				</if>
			</repeat>
		</div>
	</body:>
  </card>
</def>

<def tag="prop-language">
	<b>Language:</b> <this.lang if="lang" />
	<else>n/a (default)</else>
</def>

<def tag="semlabel"><this.label if="respond_to?(:label)" /><else><do if="respond_to?(:uri)"><%= this.to_uri.to_name_s %></do><else><%= this.to_s %></else></else></def>

<def tag="prop-type">
	<b>Type:</b> <this.type if="type" />
	<else>n/a (String)</else>
</def>

<def tag="property-string-card">
	<card>
		<header:><h4>"<this/>"</h4></header:>
		<body:>
			<p><prop-type /> <prop-language /></p>
		</body:>
	</card>
</def>

<def tag="property-relation-card">
	<card>
		<header:>
			<h4>
				<wrap tag="a" href="&url_for(:controller => 'admin/talia_sources', :action => this.id)" when="is_a?(TaliaCore::ActiveSource)">
					&lt;<semlabel />&gt;
				</wrap>
			</h4>
		</header:>
		<body:><p><%= this.uri.to_s %></p></body:>
	</card>
	
</def>

<def tag="property-card">
	<property-string-card if="is_a?(TaliaCore::PropertyString)" />
	<else><property-relation-card /></else>
</def>

<def tag="properties">
	<repeat: with="&@properties">
		<h3><%= this_key.to_uri.to_name_s %></h3>
		<property-card repeat param/>
	</repeat:>
</def>

<def tag="sidebared-content">
	<section-group>
		<section param="main-content">
			<header param="content-header">
				<h2 param="heading">
         				<ht key="talia_sources.index.heading">
						<%= model.name.titleize.pluralize %>
         				</ht>
       			</h2>

				<p param="count" if>
					<ht key="talia_sources.collection.count" count="&this.size">
						There <count prefix="are"/>
					</ht>
				</p>
			</header>

			<section param="content-body">
				<a action="new" to="&model" param="new-link">
					<ht key="talia_sources.actions.new">New <%= model.name.titleize %></ht>
				</a>

				<page-nav param="top-page-nav"/>
				
				<section>
					<collection param />
				</section>
			</section>
		</section>
		<aside param />
	</section-group>
</def>

<def tag="main-nav">
  <navigation class="main-nav" merge-attrs param="default">
    <nav-item href="#{base_url}/admin">Home</nav-item>
    <% models = Hobo::Model.all_models.select { |m| linkable?(m, :index) }.sort_by &:name -%>
    <repeat with="&models">
      <nav-item><ht key="#{this.name.tableize}.nav_item"><%= this.view_hints.model_name_plural %></ht></nav-item>
    </repeat>
	<!-- nav-item href="#{url_for(:controller => 'admin/import', :action => 'index')}">Import</nav-item -->
  </navigation>
</def>

<extend tag="page">
  <old-page merge without-live-search>
	<app-name: replace><h1><a href="#{base_url}/admin/"><app-name/></a></h1></app-name>
  </old-page>
</extend>
