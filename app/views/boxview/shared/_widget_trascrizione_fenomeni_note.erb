<% 
	# Parameters:
	# @notes: contains the notes for the right column
	# @fenomeni: contains the phenomen hierarchy
	# @content: annotated transcription content
	# @resource: the obj itself
	# [optional] @widget_title: title of the widget..

    notes_content = ''
    num = 0
    unless notes.nil? || notes.empty?
		notes.each do |n|
	        num = num+1
			apparatus = n[:apparatus] || ''
			other_apparatus = n[:other_apparatus] || nil
			related_link = n[:related_link] || ''
			
			unless (other_apparatus.nil?) then
				other_b_code_column = %[
						var other_b = $('#note_#{other_apparatus}#{n[:class]}').parents('div.box');
						if (other_b.length === 0) {
							console.log('niente other b 1');
							return;
						}
	                    other_b.find('div.note.open, #note_#{other_apparatus}#{n[:class]}').toggleClass('open closed');
	                    other_b.find('.highlighted, .#{n[:class]}').toggleClass('highlighted');
	                    reposition_notes(other_b.attr('id'));
					]
				other_b_code_text = %[
						var other_b = $('#note_#{other_apparatus}#{n[:class]}').parents('div.box');
						if (other_b.length === 0) {
							console.log('niente other b 2');
							return;
						}
	                    if (other_b.find('div.widgetContent').hasClass('notes-hidden')) 
		                	other_b.find('li.note a.note').click();
                   
	                    // keep the note open clicking on the note link
	                    other_b.find('div.note.open').toggleClass('open closed');
	                    other_b.find('#note_#{apparatus}#{n[:class]}').addClass('open').removeClass('closed');
	                    other_b.find('.highlighted').removeClass('highlighted');
	                    other_b.find('.#{n[:class]}').addClass('highlighted');
	                    reposition_notes(other_b.attr('id'));
					]
			else
				other_b_code_column = ''
				other_b_code_text = ''	
			end
			
	        notes_content << %[
	            <div class="note closed" about="#{n[:class]}" id="note_#{apparatus}#{n[:class]}">
					<p class="open">
						<span class="note_title">#{n[:name]}</span>
						<span class="note_body">#{n[:content]} #{related_link}</span>
					</p>

	                <p class="closed">#{n[:name]}</p>
	            </div>
	            <script type="text/javascript">
	                // Add the link after the last span of this class 
	                $('.#{n[:class]}:last').after('<span class="note_link" about="#{n[:class]}" id="note_link_#{apparatus}#{n[:class]}"></span>');

	                // Click on a note in the notes column highlights the linked note
	                $('#note_#{apparatus}#{n[:class]} p.closed, #note_#{apparatus}#{n[:class]} span.note_title').click(function(){
	                    var b = $(this).parents('div.box');
	                    b.find('div.note.open, #note_#{apparatus}#{n[:class]}').toggleClass('open closed');
	                    b.find('.highlighted, .#{n[:class]}').toggleClass('highlighted');
	                    reposition_notes(b.attr('id'));
						if (b.find('div.note.open').hasClass('open'))
							close_transcription_images(b.attr('id'));
	                 	#{other_b_code_column}
	                });

	                // Note link in the text: click opens the notes column
	                // and open the linked note; mouse over/out: highlights 
	                // the linked text portion
	                $('#note_link_#{apparatus}#{n[:class]}').click(function() {
	                    var b = $(this).parents('div.box');
	                    if (b.find('div.widgetContent').hasClass('notes-hidden')) 
	                        b.find('li.note a.note').click();
                    
	                    // keep the note open clicking on the note link
	                    b.find('div.note.open').toggleClass('open closed');
	                    b.find('#note_#{apparatus}#{n[:class]}').addClass('open').removeClass('closed');
	                    b.find('.highlighted').removeClass('highlighted');
	                    b.find('.#{n[:class]}').addClass('highlighted');
	                    reposition_notes(b.attr('id'));
                    	#{other_b_code_text}
	                });                
	            </script>
	            ]
	    end # notes.each do n
	end

    fenomeni_content = "<div class='fen_menu_panel hidden'><ul>"
    last_type = ''
	last_class = ''
	unless fenomeni.nil? || fenomeni.empty?
	    fenomeni.each do |f|
        
	        if (last_type != f[:item_type])
	            fenomeni_content += "</ul></li>" unless (last_type == '') 
	            fenomeni_content << %[
	                    <li class='phen_section' about='#{f[:fen_class]}'>#{f[:item_type]}</li>
	                    <li><ul>
	                ]
	            last_type = f[:item_type]
	        end
			
			if (last_class != f[:class])
	        	fenomeni_content << %[
	                	<li class='phen_item' about='#{f[:class]}'>#{f[:name]}</li>
	            	]
				last_class = f[:class]
			end
	    end
	end
    fenomeni_content += "</ul></li></ul></div>"

    transcription_content = %[
        <div class='transcription_text'>
            #{fenomeni_content}
            #{content}
        </div>
	]
	
	transcription_content += %[	
        <div class="transcription_notes">
            <a class="transcription_close_icon" id="close_notes_#{resource.id}">CHIUDI</a>
            <div class="transcription_notes_content">
                #{notes_content}
            </div>
        </div>
    ] unless notes.nil? || notes.empty?

%>

<%= 
    boxview_widget widget_title || "Trascrizione", {:class => 'transcription widget_draggable'} do |w|

        mostra_note = content_tag(:a, 'Note', :class => "note", :href => "#", :id => "mostra_note_trascrizione_#{resource.id}", :title => 'Mostra le note')
        mostra_note << %[
            <script type="text/javascript">
            $("#mostra_note_trascrizione_#{resource.id}, #close_notes_#{resource.id}").click(function(e) {
                e.preventDefault();
                var w = $(this).parents('div.widget'), 
                    wc = w.find('div.widgetContent'),
                    bo = $(this).parents('div.box'),
                    h;

                wc.toggleClass('notes-hidden notes-displayed');

                if (wc.hasClass('notes-displayed')) {
                    // Set the notes column height
                    h = w.find('div.widgetContent div.transcription_text').height();
                    w.find('div.widgetContent div.transcription_notes_content').height(h);
                    // Close all the open notes
                    wc.find('div.note.open').toggleClass('open closed');
					close_transcription_images(bo.attr('id'));
                    
                } else {
                    // Remove any highlight, close open notes
                    bo.find('.highlighted').toggleClass('highlighted');
                    wc.find('div.note.open').toggleClass('open closed');
                }
                reposition_notes(bo.attr('id'));
                return false;
            });
			</script>
		]
        mostra_fenomeni = content_tag(:a, 'Fenomeni', :href => "#", :id => "mostra_fenomeni_#{resource.id}", :title => 'Mostra i fenomeni')
        mostra_fenomeni << %[
            <script type="text/javascript">
            $("#mostra_fenomeni_#{resource.id}").click(function(e) {
                e.preventDefault();
				var pa = $(e.target).parents('.boxViewContainer').get(0),
					top = $(e.target).offset().top - $(pa).offset().top + $(e.target).height();
                $(this).parents('div.box').find('div.fen_menu_panel')
					.slideToggle()
					.css({top: top+"px"});
                return false;
            });
            </script>]

	    if (resource.respond_to?(:anastatica) && resource.respond_to?(:prev_card) && resource.respond_to?(:next_card))
        	unless resource.prev_card.nil?
          		w.right_icons boxview_link_for_object(resource.prev_card), {:class => 'prev'}
        	end
        	unless resource.next_card.nil?
          	   w.right_icons boxview_link_for_object(resource.next_card), {:class => 'next'}
        	end
		end

		w.right_icons mostra_note, {:class =>'note'} unless (notes.nil? || notes.empty?) 
        w.right_icons mostra_fenomeni, {:class => 'fenomeni'} unless (fenomeni.nil? || fenomeni.empty?)
        w.right_icons boxview_link_for_object(resource.anastatica), {:class => 'anastatica'} if resource.respond_to?(:anastatica)
        w.content content_tag(:div, transcription_content, :id => "trascrizione_#{@resource.id}"), 'notes-hidden'
    end 
%>