<% imt_id = "imt_bg_illustration_cards_#{@resource.id}" %>
<% unless @image.nil? %>
<%= boxview_widget 'Illustrazione', {:class => 'ImageWidget widget_draggable'} do |w|
      content = imt_viewer(imt_id) do |imt|
      imt.base64 = imt_image_b64 @image, [@resource.image_zone].concat(@zones)
      imt.init   = "jsapi_initializeIMW(id);"
      # imt.click  = "return imtActivateFirstWithLink($('#{imt_jquery_highlight_selector(imt_id)}'+ki));"
      # imt.over   = "$('#{imt_jquery_highlight_selector(imt_id)}'+ki).addClass('zone_highlighted');"
      # imt.out    = "$('#{imt_jquery_highlight_selector(imt_id)}'+ki).removeClass('zone_highlighted');"
    end


    if (@resource.respond_to?(:anastatica) && @resource.respond_to?(:previous_card) && @resource.respond_to?(:next_card))
       unless @resource.previous_card.nil?
         w.right_icons boxview_link_for_object(@resource.previous_card), {:class => 'prev'}
       end
       unless @resource.next_card.nil?
         w.right_icons boxview_link_for_object(@resource.next_card), {:class => 'next'}
       end
    end


    w.content content_tag(:div, content, :class => 'picture')
  end 
%>
<% end %>

<%= boxview_widget 'Scheda', {:class => 'TextWidget widget_draggable'} do |w|
  w.right_icons boxview_link_for_object(@resource.anastatica), {:class => 'anastatica', :title => "Anastatica"}

  w.content boxview_widget_field('Segnatura', @resource.signature)
  w.content boxview_widget_field('Collocazione', @resource.collocation)
  content = [@resource.tecnique.to_s, @resource.measure.to_s].select {|c| not c.blank?}.join(' - ')
  w.content boxview_widget_field('Tecnica e misure', content)
  w.content boxview_widget_field('Posizione', @resource.position)
  w.content boxview_widget_field('Note descrittive', @resource.descriptive_notes)
  w.content boxview_widget_field('Autore', @resource.author)
#  w.content boxview_widget_field('Anno', "#TODO")
#  w.content boxview_widget_field('Editore', "#TODO")
#  w.content boxview_widget_field('Luogo di edizione', "#TODO")

end
%>

<%= render :partial => '/boxview/shared/widget_trascrizione_fenomeni_note', 
		:locals => {:resource => @resource, :fenomeni => @fenomeni, :content => @content, :notes => [], :widget_title => "Trascrizione", :show_anastatica => false } 
%>

<%= boxview_widget 'Studio', {:class => 'TextWidget widget_draggable'} do |w|

	parole_chiave = ""
	unless @fenomeni.nil? || @fenomeni.empty?
	    @fenomeni.each do |f|
	        if (f[:fen_class] == Digest::MD5.hexdigest("http://purl.oclc.org/firb/swn_ontology#keywordForImageZone"))
				parole_chiave << ", " unless (parole_chiave.empty?)
	            parole_chiave << %[
					<span class='bg_keyword zone_#{:class}' about='#{f[:zone_id]}'>#{f[:name]}</span>
					<script>
						$('.bg_keyword.zone_#{:class}').mouseover(function(item) {
							var zid = $(item.target).attr('about');
							if (typeof(getFlashObject('#{imt_id}').setPolygonHighlighted) === 'function') 
            					getFlashObject('#{imt_id}').setPolygonHighlighted(true, zid);
								$(this).addClass('zone_highlighted');
						}).mouseout(function(item) {
							var zid = $(item.target).attr('about');
							if (typeof(getFlashObject('#{imt_id}').setPolygonHighlighted) === 'function') 
		           				getFlashObject('#{imt_id}').setPolygonHighlighted(false, zid);
								$(this).removeClass('zone_highlighted');
							});
					</script>
				]
	        end
	    end
	end

  w.content boxview_widget_field('Parole chiave', parole_chiave)


  w.content render :partial => '/boxview/shared/widget_field_iconclass, :locals => {:items => @resource.iconclasses}  unless @resource.iconclasses.size.zero


  w.content boxview_widget_field('Note di studio', @resource.study_notes.gsub("\r\n",'<br/>') unless @resource.study_notes.nil?

  content = [@resource.motto, @resource.motto_language].select {|c| not c.blank?}.join(',  ')
  w.content boxview_widget_field('Motto', content)

  w.content boxview_widget_field('Traduzione del motto', @resource.motto_translation)
  w.content boxview_widget_field("Possessore dell’impresa", @resource.owner)

  imprese_coll = TaliaCore::Collection.find_by_title('Imprese').first.uri.to_s
  doni_coll = TaliaCore::Collection.find_by_title('Opere di Doni').first.uri.to_s
  altri_coll = TaliaCore::Collection.find_by_title('Opere di altri autori').first.uri.to_s

#  contents = @resource.sources_in(doni_coll).to_a.map do |source|
#    content_tag :li, boxview_link_for_object(source) if source.is_public?
#  end
#  w.content boxview_widget_field('Fonti dell’immagine, opere di Doni', content_tag(:li, contents.join(''))) unless contents.size.zero?

#  contents = @resource.sources_in(altri_coll).to_a.map do |source|
#    content_tag :li, boxview_link_for_object(source) if source.is_public?
#  end
#  w.content boxview_widget_field('Fonti dell’immagine, opere di altri', content_tag(:li, contents.join(''))) unless contents.size.zero?

#  contents = @resource.sources_out(doni_coll).to_a.map do |source|
#    content_tag :li, boxview_link_for_object(source) if source.is_public?
#  end
#  w.content boxview_widget_field('Usi successivi, opere di Doni', content_tag(:li, contents.join(''))) unless contents.size.zero?

#  contents = @resource.sources_out(altri_coll).to_a.map do |source|
#    content_tag :li, boxview_link_for_object(source) if source.is_public?
#  end
#  w.content boxview_widget_field('Usi successivi, opere di altri', content_tag(:li, contents.join(''))) unless contents.size.zero?

### incontro VT ###
  contents = []
  @resource.related_source_in.to_a.each do |source|
    if source.is_public?
      title =  boxview_link_for_object(source)
      contents << content_tag(:li, title)
    end
  end
  w.content boxview_widget_field('Fonti dell’immagine',  contents.join('') ) unless contents.size.zero?

  contents = []
  @resource.related_source_out.to_a.each do |source|
    if source.is_public?
      title =  boxview_link_for_object(source)
      contents << content_tag(:li, title)
    end
  end
  w.content boxview_widget_field('Usi successivi',  contents.join('') ) unless contents.size.zero?

### fine incontro VT ###
  

  w.content boxview_widget_field("Significato originale", @resource.original_meaning)
  w.content boxview_widget_field("Significato contestuale", @resource.contextual_meaning)
end
%>

<% unless @resource.copyright_notes.blank? %>
<%= boxview_widget 'Copyright', {:class => 'TextWidget widget_draggable'} do |w|
  w.content boxview_widget_field('Dettaglio copyright dell’illustrazione', @resource.copyright_notes)
end
%>
<% end %>

<% unless @resource.bibliography_items.size.zero? %>
<%= render :partial => '/boxview/shared/widget_bibliography', :locals => {:items => @resource.bibliography_items} %>
<% end %>
