<% can_edit_stuff = @fi_procession.updatable_by?(current_user) %>
<show-page>
    <edit-link: replace>
    	<a href="&url_for(:action => :edit, :id => this.id)" if="&can_edit?">
    		<img src="&image_path('/images/icons/page_white_edit.png')" /> <ht key="#{model.name.pluralize.tableize}.actions.edit" name="&this.respond_to?(:name) ? this.name : ''" />
    	</a>
    </edit-link:>
	<content-body: >
		<field-list fields="title, parade" />	
		<br />
        <h4><ht key="#{model.name.pluralize.tableize}.belonging_to_this_procession" />:</h4>
        <p>(<ht key="hobo.drag_drop_to_order" />)</p>
		<collection id="collection_order">
			<item: id="item_#{this.id}">
		      <div class="ordering-handle" if="&can_edit_stuff">&uarr;<br/>&darr;</div>
		      <card />
		    </item:>
			<empty-message:>This collection is empty</empty-message:>
		</collection>
		<%= if Hobo::Dryml.last_if
		        opts = { :url => { :controller => 'talia_collections', :action => 'reorder', :id => @fi_procession.to_uri.safe_encoded},
		                 :constraint => :vertical,
		                 :overlap => :vertical,
		                 :scroll => :window,
		                 :handle => 'ordering-handle',
		                 :complete => [visual_effect(:highlight, 'book_order')]
		                }
		        sortable_element 'collection_order', opts
		      end # FIXME: Make unobstrusive
		   %>
	</content-body>
</show-page>